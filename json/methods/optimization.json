{
  "AdaptiveSimulatedAnnealing": {
    "do": "analyze",
    "method": "Adaptive simulated annealing",
    "workflow": false,
    "wait": "$ADAPTIVE_SIMULATED_ANNEALING_WAIT$",
    "progress": "$ADAPTIVE_SIMULATED_ANNEALING_PROGRESS$",
    "parameters": {
      "diagramPath": "$ADAPTIVE_SIMULATED_ANNEALING_DIAGRAMPATH$",
      "resultPath": "$ADAPTIVE_SIMULATED_ANNEALING_RESULTPATH$",
      "applyState": "$ADAPTIVE_SIMULATED_ANNEALING_APPLYSTATE$",
      "delta": "$ADAPTIVE_SIMULATED_ANNEALING_DELTA$"
    }
  },

  "CellularGeneticAlgorithm": {
    "do": "analyze",
    "method": "Cellular genetic algorithm",
    "workflow": false,
    "wait": "$CELLULAR_GENETIC_ALGORITHM_WAIT$",
    "progress": "$CELLULAR_GENETIC_ALGORITHM_PROGRESS$",
    "parameters": {
      "diagramPath": "$CELLULAR_GENETIC_ALGORITHM_DIAGRAMPATH$",
      "resultPath": "$CELLULAR_GENETIC_ALGORITHM_RESULTPATH$",
      "applyState": "$CELLULAR_GENETIC_ALGORITHM_APPLYSTATE$",
      "maxIterations": "$CELLULAR_GENETIC_ALGORITHM_MAXITERATIONS$",
      "gridLength": "$CELLULAR_GENETIC_ALGORITHM_GRIDLENGTH$",
      "gridWidth": "$CELLULAR_GENETIC_ALGORITHM_GRIDWIDTH$"
    }
  },

  "EvolutionStrategySRES": {
    "do": "analyze",
    "method": "Evolution strategy (SRES)",
    "workflow": false,
    "wait": "$EVOLUTION_STRATEGY_SRES_WAIT$",
    "progress": "$EVOLUTION_STRATEGY_SRES_PROGRESS$",
    "parameters": {
      "diagramPath": "$EVOLUTION_STRATEGY_SRES_DIAGRAMPATH$",
      "resultPath": "$EVOLUTION_STRATEGY_SRES_RESULTPATH$",
      "applyState": "$EVOLUTION_STRATEGY_SRES_APPLYSTATE$",
      "numOfIterations": "$EVOLUTION_STRATEGY_SRES_NUMOFITERATIONS$",
      "survivalSize": "$EVOLUTION_STRATEGY_SRES_SURVIVALSIZE$"
    }
  },

  "GLBSOLVE": {
    "do": "analyze",
    "method": "GLBSOLVE",
    "workflow": false,
    "wait": "$GLBSOLVE_WAIT$",
    "progress": "$GLBSOLVE_PROGRESS$",
    "parameters": {
      "diagramPath": "$GLBSOLVE_DIAGRAMPATH$",
      "resultPath": "$GLBSOLVE_RESULTPATH$",
      "applyState": "$GLBSOLVE_APPLYSTATE$",
      "numOfIterations": "$GLBSOLVE_NUMOFITERATIONS$"
    }
  },

  "ParticleSwarmOptimization": {
    "do": "analyze",
    "method": "Particle swarm optimization",
    "workflow": false,
    "wait": "$PARTICLE_SWARM_OPTIMIZATION_WAIT$",
    "progress": "$PARTICLE_SWARM_OPTIMIZATION_PROGRESS$",
    "parameters": {
      "diagramPath": "$PARTICLE_SWARM_OPTIMIZATION_DIAGRAMPATH$",
      "resultPath": "$PARTICLE_SWARM_OPTIMIZATION_RESULTPATH$",
      "applyState": "$PARTICLE_SWARM_OPTIMIZATION_APPLYSTATE$",
      "numberOfIterations": "$PARTICLE_SWARM_OPTIMIZATION_NUMBEROFITERATIONS$",
      "particleNumber": "$PARTICLE_SWARM_OPTIMIZATION_PARTICLENUMBER$"
    }

  }
}
