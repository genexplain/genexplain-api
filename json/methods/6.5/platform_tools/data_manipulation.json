{
  "AnnotateDiagram": {
    "do": "analyze",
    "method": "Annotate diagram",
    "workflow": false,
    "wait": "$ANNOTATE_DIAGRAM_WAIT$",
    "progress": "$ANNOTATE_DIAGRAM_PROGRESS$",
    "parameters": {
      "inputDiagram": "$ANNOTATE_DIAGRAM_INPUTDIAGRAM$",
      "table": "$ANNOTATE_DIAGRAM_TABLE$",
      "column": "$ANNOTATE_DIAGRAM_COLUMN$",
      "outputDiagram": "$ANNOTATE_DIAGRAM_OUTPUTDIAGRAM$"
    }
  },

  "AnnotateTable": {
    "do": "analyze",
    "method": "Annotate table",
    "workflow": false,
    "wait": "$ANNOTATE_TABLE_WAIT$",
    "progress": "$ANNOTATE_TABLE_PROGRESS$",
    "parameters": {
      "inputTablePath": "$ANNOTATE_TABLE_INPUTTABLEPATH$",
      "species": "$ANNOTATE_TABLE_SPECIES$",
      "annotationCollectionPath": "$ANNOTATE_TABLE_ANNOTATIONCOLLECTIONPATH$",
      "annotationColumns": "$ANNOTATE_TABLE_ANNOTATIONCOLUMNS$",
      "replaceDuplicates": "$ANNOTATE_TABLE_REPLACEDUPLICATES$",
      "outputTablePath": "$ANNOTATE_TABLE_OUTPUTTABLEPATH$"
    }
  },

  "AnnotateTrackWithGenes": {
    "do": "analyze",
    "method": "Annotate track with genes",
    "workflow": false,
    "wait": "$ANNOTATE_TRACK_WITH_GENES_WAIT$",
    "progress": "$ANNOTATE_TRACK_WITH_GENES_PROGRESS$",
    "parameters": {
      "inputTrack": "$ANNOTATE_TRACK_WITH_GENES_INPUTTRACK$",
      "species": "$ANNOTATE_TRACK_WITH_GENES_SPECIES$",
      "from": "$ANNOTATE_TRACK_WITH_GENES_FROM$",
      "to": "$ANNOTATE_TRACK_WITH_GENES_TO$",
      "outputTrack": "$ANNOTATE_TRACK_WITH_GENES_OUTPUTTRACK$"
    }
  },

  "CRClusterSelector": {
    "do": "analyze",
    "method": "CR cluster selector",
    "workflow": false,
    "wait": "$CR_CLUSTER_SELECTOR_WAIT$",
    "progress": "$CR_CLUSTER_SELECTOR_PROGRESS$",
    "parameters": {
      "inputClusters": "$CR_CLUSTER_SELECTOR_INPUTCLUSTERS$",
      "maxClusters": "$CR_CLUSTER_SELECTOR_MAXCLUSTERS$",
      "maxItemsPerCluster": "$CR_CLUSTER_SELECTOR_MAXITEMSPERCLUSTER$",
      "minItemsPerCluster": "$CR_CLUSTER_SELECTOR_MINITEMSPERCLUSTER$",
      "outputFolder": "$CR_CLUSTER_SELECTOR_OUTPUTFOLDER$"
    }
  },

  "CalculateWeightedMutationScore": {
    "do": "analyze",
    "method": "Calculate weighted mutation score",
    "workflow": false,
    "wait": "$CALCULATE_WEIGHTED_MUTATION_SCORE_WAIT$",
    "progress": "$CALCULATE_WEIGHTED_MUTATION_SCORE_PROGRESS$",
    "parameters": {
      "inputTable": "$CALCULATE_WEIGHTED_MUTATION_SCORE_INPUTTABLE$",
      "useSimpleScore": "$CALCULATE_WEIGHTED_MUTATION_SCORE_USESIMPLESCORE$",
      "countColumn": "$CALCULATE_WEIGHTED_MUTATION_SCORE_COUNTCOLUMN$",
      "exonCountColumn": "$CALCULATE_WEIGHTED_MUTATION_SCORE_EXONCOUNTCOLUMN$",
      "promoterCountColumn": "$CALCULATE_WEIGHTED_MUTATION_SCORE_PROMOTERCOUNTCOLUMN$",
      "species": "$CALCULATE_WEIGHTED_MUTATION_SCORE_SPECIES$",
      "diseases": "$CALCULATE_WEIGHTED_MUTATION_SCORE_DISEASES$",
      "outputTable": "$CALCULATE_WEIGHTED_MUTATION_SCORE_OUTPUTTABLE$"
    }
  },

  "CheckQuotas": {
    "do": "analyze",
    "method": "Check quotas",
    "workflow": false,
    "wait": "$CHECK_QUOTAS_WAIT$",
    "progress": "$CHECK_QUOTAS_PROGRESS$",
    "parameters": {
      "projects": "$CHECK_QUOTAS_PROJECTS$"
    }
  },

  "CompositeModuleToProteins": {
    "do": "analyze",
    "method": "Composite module to proteins",
    "workflow": false,
    "wait": "$COMPOSITE_MODULE_TO_PROTEINS_WAIT$",
    "progress": "$COMPOSITE_MODULE_TO_PROTEINS_PROGRESS$",
    "parameters": {
      "sitesCollection": "$COMPOSITE_MODULE_TO_PROTEINS_SITESCOLLECTION$",
      "siteModelsCollection": "$COMPOSITE_MODULE_TO_PROTEINS_SITEMODELSCOLLECTION$",
      "species": "$COMPOSITE_MODULE_TO_PROTEINS_SPECIES$",
      "targetType": "$COMPOSITE_MODULE_TO_PROTEINS_TARGETTYPE$",
      "ignoreNaNInAggregator": "$COMPOSITE_MODULE_TO_PROTEINS_IGNORENANINAGGREGATOR$",
      "outputTable": "$COMPOSITE_MODULE_TO_PROTEINS_OUTPUTTABLE$"
    }
  },

  "ConvertTable": {
    "do": "analyze",
    "method": "Convert table",
    "workflow": false,
    "wait": "$CONVERT_TABLE_WAIT$",
    "progress": "$CONVERT_TABLE_PROGRESS$",
    "parameters": {
      "sourceTable": "$CONVERT_TABLE_SOURCETABLE$",
      "idsColumnName": "$CONVERT_TABLE_IDSCOLUMNNAME$",
      "species": "$CONVERT_TABLE_SPECIES$",
      "sourceType": "$CONVERT_TABLE_SOURCETYPE$",
      "targetType": "$CONVERT_TABLE_TARGETTYPE$",
      "ignoreNaNInAggregator": "$CONVERT_TABLE_IGNORENANINAGGREGATOR$",
      "aggregator": "$CONVERT_TABLE_AGGREGATOR$",
      "columnName": "$CONVERT_TABLE_COLUMNNAME$",
      "maxMatches": "$CONVERT_TABLE_MAXMATCHES$",
      "outputSourceIds": "$CONVERT_TABLE_OUTPUTSOURCEIDS$",
      "unmatchedTable": "$CONVERT_TABLE_UNMATCHEDTABLE$",
      "outputTable": "$CONVERT_TABLE_OUTPUTTABLE$"
    }
  },

  "ConvertTableToVCFTrack": {
    "do": "analyze",
    "method": "Convert table to VCF track",
    "workflow": false,
    "wait": "$CONVERT_TABLE_TO_VCF_TRACK_WAIT$",
    "progress": "$CONVERT_TABLE_TO_VCF_TRACK_PROGRESS$",
    "parameters": {
      "inputTable": "$CONVERT_TABLE_TO_VCF_TRACK_INPUTTABLE$",
      "chromosomeColumn": "$CONVERT_TABLE_TO_VCF_TRACK_CHROMOSOMECOLUMN$",
      "fromColumn": "$CONVERT_TABLE_TO_VCF_TRACK_FROMCOLUMN$",
      "toColumn": "$CONVERT_TABLE_TO_VCF_TRACK_TOCOLUMN$",
      "altAlleleColumn": "$CONVERT_TABLE_TO_VCF_TRACK_ALTALLELECOLUMN$",
      "refAlleleColumn": "$CONVERT_TABLE_TO_VCF_TRACK_REFALLELECOLUMN$",
      "strandColumn": "$CONVERT_TABLE_TO_VCF_TRACK_STRANDCOLUMN$",
      "sequenceCollectionPath": "$CONVERT_TABLE_TO_VCF_TRACK_SEQUENCECOLLECTIONPATH$",
      "genomeId": "$CONVERT_TABLE_TO_VCF_TRACK_GENOMEID$",
      "outputTrack": "$CONVERT_TABLE_TO_VCF_TRACK_OUTPUTTRACK$"
    }
  },

  "ConvertTableToTrack": {
    "do": "analyze",
    "method": "Convert table to track",
    "workflow": false,
    "wait": "$CONVERT_TABLE_TO_TRACK_WAIT$",
    "progress": "$CONVERT_TABLE_TO_TRACK_PROGRESS$",
    "parameters": {
      "inputTable": "$CONVERT_TABLE_TO_TRACK_INPUTTABLE$",
      "chromosomeColumn": "$CONVERT_TABLE_TO_TRACK_CHROMOSOMECOLUMN$",
      "fromColumn": "$CONVERT_TABLE_TO_TRACK_FROMCOLUMN$",
      "toColumn": "$CONVERT_TABLE_TO_TRACK_TOCOLUMN$",
      "strandColumn": "$CONVERT_TABLE_TO_TRACK_STRANDCOLUMN$",
      "sequenceCollectionPath": "$CONVERT_TABLE_TO_TRACK_SEQUENCECOLLECTIONPATH$",
      "genomeId": "$CONVERT_TABLE_TO_TRACK_GENOMEID$",
      "outputTrack": "$CONVERT_TABLE_TO_TRACK_OUTPUTTRACK$"
    }
  },

  "ConvertTableViaHomology": {
    "do": "analyze",
    "method": "Convert table via homology",
    "workflow": false,
    "wait": "$CONVERT_TABLE_VIA_HOMOLOGY_WAIT$",
    "progress": "$CONVERT_TABLE_VIA_HOMOLOGY_PROGRESS$",
    "parameters": {
      "sourceTable": "$CONVERT_TABLE_VIA_HOMOLOGY_SOURCETABLE$",
      "idsColumnName": "$CONVERT_TABLE_VIA_HOMOLOGY_IDSCOLUMNNAME$",
      "species": "$CONVERT_TABLE_VIA_HOMOLOGY_SPECIES$",
      "sourceType": "$CONVERT_TABLE_VIA_HOMOLOGY_SOURCETYPE$",
      "targetType": "$CONVERT_TABLE_VIA_HOMOLOGY_TARGETTYPE$",
      "ignoreNaNInAggregator": "$CONVERT_TABLE_VIA_HOMOLOGY_IGNORENANINAGGREGATOR$",
      "targetSpecies": "$CONVERT_TABLE_VIA_HOMOLOGY_TARGETSPECIES$",
      "aggregator": "$CONVERT_TABLE_VIA_HOMOLOGY_AGGREGATOR$",
      "columnName": "$CONVERT_TABLE_VIA_HOMOLOGY_COLUMNNAME$",
      "maxMatches": "$CONVERT_TABLE_VIA_HOMOLOGY_MAXMATCHES$",
      "outputSourceIds": "$CONVERT_TABLE_VIA_HOMOLOGY_OUTPUTSOURCEIDS$",
      "unmatchedTable": "$CONVERT_TABLE_VIA_HOMOLOGY_UNMATCHEDTABLE$",
      "outputTable": "$CONVERT_TABLE_VIA_HOMOLOGY_OUTPUTTABLE$"
    }
  },

  "CreateFolder": {
    "do": "analyze",
    "method": "Create folder",
    "workflow": false,
    "wait": "$CREATE_FOLDER_WAIT$",
    "progress": "$CREATE_FOLDER_PROGRESS$",
    "parameters": {
      "folderName": "$CREATE_FOLDER_FOLDERNAME$"
    }
  },

  "CreateRandomTrack": {
    "do": "analyze",
    "method": "Create random track",
    "workflow": false,
    "wait": "$CREATE_RANDOM_TRACK_WAIT$",
    "progress": "$CREATE_RANDOM_TRACK_PROGRESS$",
    "parameters": {
      "inputTrackPath": "$CREATE_RANDOM_TRACK_INPUTTRACKPATH$",
      "dbSelector": "$CREATE_RANDOM_TRACK_DBSELECTOR$",
      "species": "$CREATE_RANDOM_TRACK_SPECIES$",
      "standardChromosomes": "$CREATE_RANDOM_TRACK_STANDARDCHROMOSOMES$",
      "seqNumber": "$CREATE_RANDOM_TRACK_SEQNUMBER$",
      "seqLength": "$CREATE_RANDOM_TRACK_SEQLENGTH$",
      "from": "$CREATE_RANDOM_TRACK_FROM$",
      "to": "$CREATE_RANDOM_TRACK_TO$",
      "withOverlap": "$CREATE_RANDOM_TRACK_WITHOVERLAP$",
      "randomShift": "$CREATE_RANDOM_TRACK_RANDOMSHIFT$",
      "outputTrackPath": "$CREATE_RANDOM_TRACK_OUTPUTTRACKPATH$",
      "randSeed": "$CREATE_RANDOM_TRACK_RANDSEED$"
    }
  },

  "CreateTissuespecificPromoterTrack": {
    "do": "analyze",
    "method": "Create tissue-specific promoter track",
    "workflow": false,
    "wait": "$CREATE_TISSUESPECIFIC_PROMOTER_TRACK_WAIT$",
    "progress": "$CREATE_TISSUESPECIFIC_PROMOTER_TRACK_PROGRESS$",
    "parameters": {
      "inputSetPath": "$CREATE_TISSUESPECIFIC_PROMOTER_TRACK_INPUTSETPATH$",
      "cageDatabase": "$CREATE_TISSUESPECIFIC_PROMOTER_TRACK_CAGEDATABASE$",
      "cellCondition": "$CREATE_TISSUESPECIFIC_PROMOTER_TRACK_CELLCONDITION$",
      "from": "$CREATE_TISSUESPECIFIC_PROMOTER_TRACK_FROM$",
      "to": "$CREATE_TISSUESPECIFIC_PROMOTER_TRACK_TO$",
      "tssSelection": "$CREATE_TISSUESPECIFIC_PROMOTER_TRACK_TSSSELECTION$",
      "subsDefault": "$CREATE_TISSUESPECIFIC_PROMOTER_TRACK_SUBSDEFAULT$",
      "outputPath": "$CREATE_TISSUESPECIFIC_PROMOTER_TRACK_OUTPUTPATH$"
    }
  },

  "CreateTranscriptRegionTrack": {
    "do": "analyze",
    "method": "Create transcript region track",
    "workflow": false,
    "wait": "$CREATE_TRANSCRIPT_REGION_TRACK_WAIT$",
    "progress": "$CREATE_TRANSCRIPT_REGION_TRACK_PROGRESS$",
    "parameters": {
      "inputSetPath": "$CREATE_TRANSCRIPT_REGION_TRACK_INPUTSETPATH$",
      "species": "$CREATE_TRANSCRIPT_REGION_TRACK_SPECIES$",
      "utrType": "$CREATE_TRANSCRIPT_REGION_TRACK_UTRTYPE$",
      "useLastExon": "$CREATE_TRANSCRIPT_REGION_TRACK_USELASTEXON$",
      "utrLen": "$CREATE_TRANSCRIPT_REGION_TRACK_UTRLEN$",
      "ignoreCds": "$CREATE_TRANSCRIPT_REGION_TRACK_IGNORECDS$",
      "outputPath": "$CREATE_TRANSCRIPT_REGION_TRACK_OUTPUTPATH$"
    }
  },

  "FilterVCFByGenotype": {
    "do": "analyze",
    "method": "Filter VCF by genotype",
    "workflow": false,
    "wait": "$FILTER_VCF_BY_GENOTYPE_WAIT$",
    "progress": "$FILTER_VCF_BY_GENOTYPE_PROGRESS$",
    "parameters": {
      "inputTrack": "$FILTER_VCF_BY_GENOTYPE_INPUTTRACK$",
      "mode": "$FILTER_VCF_BY_GENOTYPE_MODE$",
      "outputPath": "$FILTER_VCF_BY_GENOTYPE_OUTPUTPATH$"
    }
  },

  "FilterDuplicateRows": {
    "do": "analyze",
    "method": "Filter duplicate rows",
    "workflow": false,
    "wait": "$FILTER_DUPLICATE_ROWS_WAIT$",
    "progress": "$FILTER_DUPLICATE_ROWS_PROGRESS$",
    "parameters": {
      "inputTablePath": "$FILTER_DUPLICATE_ROWS_INPUTTABLEPATH$",
      "primaryColumn": "$FILTER_DUPLICATE_ROWS_PRIMARYCOLUMN$",
      "scoreColumn": "$FILTER_DUPLICATE_ROWS_SCORECOLUMN$",
      "outputPath": "$FILTER_DUPLICATE_ROWS_OUTPUTPATH$"
    }
  },

  "FilterOneTrackByAnother": {
    "do": "analyze",
    "method": "Filter one track by another",
    "workflow": false,
    "wait": "$FILTER_ONE_TRACK_BY_ANOTHER_WAIT$",
    "progress": "$FILTER_ONE_TRACK_BY_ANOTHER_PROGRESS$",
    "parameters": {
      "inputTrack": "$FILTER_ONE_TRACK_BY_ANOTHER_INPUTTRACK$",
      "filterTrack": "$FILTER_ONE_TRACK_BY_ANOTHER_FILTERTRACK$",
      "maxDistance": "$FILTER_ONE_TRACK_BY_ANOTHER_MAXDISTANCE$",
      "fieldNames": "$FILTER_ONE_TRACK_BY_ANOTHER_FIELDNAMES$",
      "selectedFilterFieldNames": "$FILTER_ONE_TRACK_BY_ANOTHER_SELECTEDFILTERFIELDNAMES$",
      "ignoreNaNInAggregator": "$FILTER_ONE_TRACK_BY_ANOTHER_IGNORENANINAGGREGATOR$",
      "aggregator": "$FILTER_ONE_TRACK_BY_ANOTHER_AGGREGATOR$",
      "mode": "$FILTER_ONE_TRACK_BY_ANOTHER_MODE$",
      "outputTrack": "$FILTER_ONE_TRACK_BY_ANOTHER_OUTPUTTRACK$"
    }
  },

  "FilterTable": {
    "do": "analyze",
    "method": "Filter table",
    "workflow": false,
    "wait": "$FILTER_TABLE_WAIT$",
    "progress": "$FILTER_TABLE_PROGRESS$",
    "parameters": {
      "inputPath": "$FILTER_TABLE_INPUTPATH$",
      "filterExpression": "$FILTER_TABLE_FILTEREXPRESSION$",
      "filteringMode": "$FILTER_TABLE_FILTERINGMODE$",
      "outputPath": "$FILTER_TABLE_OUTPUTPATH$"
    }
  },

  "FilterTrackByCondition": {
    "do": "analyze",
    "method": "Filter track by condition",
    "workflow": false,
    "wait": "$FILTER_TRACK_BY_CONDITION_WAIT$",
    "progress": "$FILTER_TRACK_BY_CONDITION_PROGRESS$",
    "parameters": {
      "inputTrack": "$FILTER_TRACK_BY_CONDITION_INPUTTRACK$",
      "condition": "$FILTER_TRACK_BY_CONDITION_CONDITION$",
      "outputTrack": "$FILTER_TRACK_BY_CONDITION_OUTPUTTRACK$"
    }
  },

  "GeneSetToTrack": {
    "do": "analyze",
    "method": "Gene set to track",
    "workflow": false,
    "wait": "$GENE_SET_TO_TRACK_WAIT$",
    "progress": "$GENE_SET_TO_TRACK_PROGRESS$",
    "parameters": {
      "sourcePath": "$GENE_SET_TO_TRACK_SOURCEPATH$",
      "species": "$GENE_SET_TO_TRACK_SPECIES$",
      "from": "$GENE_SET_TO_TRACK_FROM$",
      "to": "$GENE_SET_TO_TRACK_TO$",
      "overlapMergingMode": "$GENE_SET_TO_TRACK_OVERLAPMERGINGMODE$",
      "destPath": "$GENE_SET_TO_TRACK_DESTPATH$"
    }
  },

  "GroupTableRows": {
    "do": "analyze",
    "method": "Group table rows",
    "workflow": false,
    "wait": "$GROUP_TABLE_ROWS_WAIT$",
    "progress": "$GROUP_TABLE_ROWS_PROGRESS$",
    "parameters": {
      "inputTable": "$GROUP_TABLE_ROWS_INPUTTABLE$",
      "columnName": "$GROUP_TABLE_ROWS_COLUMNNAME$",
      "outputTable": "$GROUP_TABLE_ROWS_OUTPUTTABLE$"
    }
  },

  "ImportFromBCPlatform": {
    "do": "analyze",
    "method": "Import from BC Platform",
    "workflow": false,
    "wait": "$IMPORT_FROM_BC_PLATFORM_WAIT$",
    "progress": "$IMPORT_FROM_BC_PLATFORM_PROGRESS$",
    "parameters": {
      "server": "$IMPORT_FROM_BC_PLATFORM_SERVER$",
      "apiKey": "$IMPORT_FROM_BC_PLATFORM_APIKEY$",
      "password": "$IMPORT_FROM_BC_PLATFORM_PASSWORD$",
      "dataSet": "$IMPORT_FROM_BC_PLATFORM_DATASET$",
      "outputPath": "$IMPORT_FROM_BC_PLATFORM_OUTPUTPATH$"
    }
  },

  "ImportFromTranSMART": {
    "do": "analyze",
    "method": "Import from TranSMART",
    "workflow": false,
    "wait": "$IMPORT_FROM_TRANSMART_WAIT$",
    "progress": "$IMPORT_FROM_TRANSMART_PROGRESS$",
    "parameters": {
      "server": "$IMPORT_FROM_TRANSMART_SERVER$",
      "token": "$IMPORT_FROM_TRANSMART_TOKEN$",
      "study": "$IMPORT_FROM_TRANSMART_STUDY$",
      "conceptMatch": "$IMPORT_FROM_TRANSMART_CONCEPTMATCH$",
      "conceptLink": "$IMPORT_FROM_TRANSMART_CONCEPTLINK$",
      "dataConstraints": "$IMPORT_FROM_TRANSMART_DATACONSTRAINTS$",
      "assayConstraints": "$IMPORT_FROM_TRANSMART_ASSAYCONSTRAINTS$",
      "trialName": "$IMPORT_FROM_TRANSMART_TRIALNAME$",
      "patientSet": "$IMPORT_FROM_TRANSMART_PATIENTSET$",
      "ontologyTerm": "$IMPORT_FROM_TRANSMART_ONTOLOGYTERM$",
      "assayIds": "$IMPORT_FROM_TRANSMART_ASSAYIDS$",
      "patientIds": "$IMPORT_FROM_TRANSMART_PATIENTIDS$",
      "chromosome": "$IMPORT_FROM_TRANSMART_CHROMOSOME$",
      "genes": "$IMPORT_FROM_TRANSMART_GENES$",
      "geneIds": "$IMPORT_FROM_TRANSMART_GENEIDS$",
      "geneSignatures": "$IMPORT_FROM_TRANSMART_GENESIGNATURES$",
      "geneSignatureIds": "$IMPORT_FROM_TRANSMART_GENESIGNATUREIDS$",
      "proteins": "$IMPORT_FROM_TRANSMART_PROTEINS$",
      "proteinIds": "$IMPORT_FROM_TRANSMART_PROTEINIDS$",
      "pathways": "$IMPORT_FROM_TRANSMART_PATHWAYS$",
      "pathwayIds": "$IMPORT_FROM_TRANSMART_PATHWAYIDS$",
      "projection": "$IMPORT_FROM_TRANSMART_PROJECTION$",
      "snps": "$IMPORT_FROM_TRANSMART_SNPS$",
      "outputPath": "$IMPORT_FROM_TRANSMART_OUTPUTPATH$"
    }
  },

  "IntersectTables": {
    "do": "analyze",
    "method": "Intersect tables",
    "workflow": false,
    "wait": "$INTERSECT_TABLES_WAIT$",
    "progress": "$INTERSECT_TABLES_PROGRESS$",
    "parameters": {
      "leftGroup/tablePath": "$INTERSECT_TABLES_LEFTGROUPTABLEPATH$",
      "leftGroup/columns": "$INTERSECT_TABLES_LEFTGROUPCOLUMNS$",
      "rightGroup/tablePath": "$INTERSECT_TABLES_RIGHTGROUPTABLEPATH$",
      "rightGroup/columns": "$INTERSECT_TABLES_RIGHTGROUPCOLUMNS$",
      "mergeColumns": "$INTERSECT_TABLES_MERGECOLUMNS$",
      "ignoreNaNInAggregator": "$INTERSECT_TABLES_IGNORENANINAGGREGATOR$",
      "aggregator": "$INTERSECT_TABLES_AGGREGATOR$",
      "output": "$INTERSECT_TABLES_OUTPUT$"
    }
  },

  "IntersectTracks": {
    "do": "analyze",
    "method": "Intersect tracks",
    "workflow": false,
    "wait": "$INTERSECT_TRACKS_WAIT$",
    "progress": "$INTERSECT_TRACKS_PROGRESS$",
    "parameters": {
      "inputTrackPath": "$INTERSECT_TRACKS_INPUTTRACKPATH$",
      "filterTrackPath": "$INTERSECT_TRACKS_FILTERTRACKPATH$",
      "outputFolderPath": "$INTERSECT_TRACKS_OUTPUTFOLDERPATH$",
      "simpleOverlap": "$INTERSECT_TRACKS_SIMPLEOVERLAP$",
      "overlapProp": "$INTERSECT_TRACKS_OVERLAPPROP$",
      "maxUncovered": "$INTERSECT_TRACKS_MAXUNCOVERED$"
    }
  },

  "JoinFullTables": {
    "do": "analyze",
    "method": "Join full tables",
    "workflow": false,
    "wait": "$JOIN_FULL_TABLES_WAIT$",
    "progress": "$JOIN_FULL_TABLES_PROGRESS$",
    "parameters": {
      "leftGroup/tablePath": "$JOIN_FULL_TABLES_LEFTGROUPTABLEPATH$",
      "leftGroup/columns": "$JOIN_FULL_TABLES_LEFTGROUPCOLUMNS$",
      "rightGroup/tablePath": "$JOIN_FULL_TABLES_RIGHTGROUPTABLEPATH$",
      "rightGroup/columns": "$JOIN_FULL_TABLES_RIGHTGROUPCOLUMNS$",
      "joinType": "$JOIN_FULL_TABLES_JOINTYPE$",
      "mergeColumns": "$JOIN_FULL_TABLES_MERGECOLUMNS$",
      "ignoreNaNInAggregator": "$JOIN_FULL_TABLES_IGNORENANINAGGREGATOR$",
      "aggregator": "$JOIN_FULL_TABLES_AGGREGATOR$",
      "output": "$JOIN_FULL_TABLES_OUTPUT$"
    }
  },

  "JoinSeveralTables": {
    "do": "analyze",
    "method": "Join several tables",
    "workflow": false,
    "wait": "$JOIN_SEVERAL_TABLES_WAIT$",
    "progress": "$JOIN_SEVERAL_TABLES_PROGRESS$",
    "parameters": {
      "tablePaths": "$JOIN_SEVERAL_TABLES_TABLEPATHS$",
      "joinType": "$JOIN_SEVERAL_TABLES_JOINTYPE$",
      "mergeColumns": "$JOIN_SEVERAL_TABLES_MERGECOLUMNS$",
      "ignoreNaNInAggregator": "$JOIN_SEVERAL_TABLES_IGNORENANINAGGREGATOR$",
      "aggregator": "$JOIN_SEVERAL_TABLES_AGGREGATOR$",
      "outputPath": "$JOIN_SEVERAL_TABLES_OUTPUTPATH$"
    }
  },

  "JoinTables": {
    "do": "analyze",
    "method": "Join tables",
    "workflow": false,
    "wait": "$JOIN_TABLES_WAIT$",
    "progress": "$JOIN_TABLES_PROGRESS$",
    "parameters": {
      "leftGroup/tablePath": "$JOIN_TABLES_LEFTGROUPTABLEPATH$",
      "leftGroup/columns": "$JOIN_TABLES_LEFTGROUPCOLUMNS$",
      "rightGroup/tablePath": "$JOIN_TABLES_RIGHTGROUPTABLEPATH$",
      "rightGroup/columns": "$JOIN_TABLES_RIGHTGROUPCOLUMNS$",
      "mergeColumns": "$JOIN_TABLES_MERGECOLUMNS$",
      "ignoreNaNInAggregator": "$JOIN_TABLES_IGNORENANINAGGREGATOR$",
      "aggregator": "$JOIN_TABLES_AGGREGATOR$",
      "output": "$JOIN_TABLES_OUTPUT$"
    }
  },

  "JoinTracks": {
    "do": "analyze",
    "method": "Join tracks",
    "workflow": false,
    "wait": "$JOIN_TRACKS_WAIT$",
    "progress": "$JOIN_TRACKS_PROGRESS$",
    "parameters": {
      "tracks": "$JOIN_TRACKS_TRACKS$",
      "output": "$JOIN_TRACKS_OUTPUT$"
    }
  },

  "MatricesToMolecules": {
    "do": "analyze",
    "method": "Matrices to molecules",
    "workflow": false,
    "wait": "$MATRICES_TO_MOLECULES_WAIT$",
    "progress": "$MATRICES_TO_MOLECULES_PROGRESS$",
    "parameters": {
      "sitesCollection": "$MATRICES_TO_MOLECULES_SITESCOLLECTION$",
      "siteModelsCollection": "$MATRICES_TO_MOLECULES_SITEMODELSCOLLECTION$",
      "species": "$MATRICES_TO_MOLECULES_SPECIES$",
      "targetType": "$MATRICES_TO_MOLECULES_TARGETTYPE$",
      "ignoreNaNInAggregator": "$MATRICES_TO_MOLECULES_IGNORENANINAGGREGATOR$",
      "aggregator": "$MATRICES_TO_MOLECULES_AGGREGATOR$",
      "columnName": "$MATRICES_TO_MOLECULES_COLUMNNAME$",
      "outputTable": "$MATRICES_TO_MOLECULES_OUTPUTTABLE$"
    }
  },

  "MergeTableColumns": {
    "do": "analyze",
    "method": "Merge table columns",
    "workflow": false,
    "wait": "$MERGE_TABLE_COLUMNS_WAIT$",
    "progress": "$MERGE_TABLE_COLUMNS_PROGRESS$",
    "parameters": {
      "tableColumns/tablePath": "$MERGE_TABLE_COLUMNS_TABLECOLUMNSTABLEPATH$",
      "tableColumns/columns": "$MERGE_TABLE_COLUMNS_TABLECOLUMNSCOLUMNS$",
      "ignoreNaNInAggregator": "$MERGE_TABLE_COLUMNS_IGNORENANINAGGREGATOR$",
      "aggregator": "$MERGE_TABLE_COLUMNS_AGGREGATOR$",
      "mergedColumnName": "$MERGE_TABLE_COLUMNS_MERGEDCOLUMNNAME$",
      "outputTable": "$MERGE_TABLE_COLUMNS_OUTPUTTABLE$"
    }
  },

  "MutationsToGenesWithWeights": {
    "do": "analyze",
    "method": "Mutations to genes with weights",
    "workflow": false,
    "wait": "$MUTATIONS_TO_GENES_WITH_WEIGHTS_WAIT$",
    "progress": "$MUTATIONS_TO_GENES_WITH_WEIGHTS_PROGRESS$",
    "parameters": {
      "inputTrack": "$MUTATIONS_TO_GENES_WITH_WEIGHTS_INPUTTRACK$",
      "species": "$MUTATIONS_TO_GENES_WITH_WEIGHTS_SPECIES$",
      "from": "$MUTATIONS_TO_GENES_WITH_WEIGHTS_FROM$",
      "to": "$MUTATIONS_TO_GENES_WITH_WEIGHTS_TO$",
      "promoterFrom": "$MUTATIONS_TO_GENES_WITH_WEIGHTS_PROMOTERFROM$",
      "promoterTo": "$MUTATIONS_TO_GENES_WITH_WEIGHTS_PROMOTERTO$",
      "resultTypes": "$MUTATIONS_TO_GENES_WITH_WEIGHTS_RESULTTYPES$",
      "weightProperty": "$MUTATIONS_TO_GENES_WITH_WEIGHTS_WEIGHTPROPERTY$",
      "outputTrack": "$MUTATIONS_TO_GENES_WITH_WEIGHTS_OUTPUTTRACK$",
      "outputTable": "$MUTATIONS_TO_GENES_WITH_WEIGHTS_OUTPUTTABLE$"
    }
  },

  "PSDPharmaceuticalCompoundsAnalysis": {
    "do": "analyze",
    "method": "PSD pharmaceutical compounds analysis",
    "workflow": false,
    "wait": "$PSD_PHARMACEUTICAL_COMPOUNDS_ANALYSIS_WAIT$",
    "progress": "$PSD_PHARMACEUTICAL_COMPOUNDS_ANALYSIS_PROGRESS$",
    "parameters": {
      "inputTablePath": "$PSD_PHARMACEUTICAL_COMPOUNDS_ANALYSIS_INPUTTABLEPATH$",
      "weightColumn": "$PSD_PHARMACEUTICAL_COMPOUNDS_ANALYSIS_WEIGHTCOLUMN$",
      "useWeightAsRank": "$PSD_PHARMACEUTICAL_COMPOUNDS_ANALYSIS_USEWEIGHTASRANK$",
      "secondaryTablePath": "$PSD_PHARMACEUTICAL_COMPOUNDS_ANALYSIS_SECONDARYTABLEPATH$",
      "diseases": "$PSD_PHARMACEUTICAL_COMPOUNDS_ANALYSIS_DISEASES$",
      "fpTargetWeight": "$PSD_PHARMACEUTICAL_COMPOUNDS_ANALYSIS_FPTARGETWEIGHT$",
      "useActivators": "$PSD_PHARMACEUTICAL_COMPOUNDS_ANALYSIS_USEACTIVATORS$",
      "structTablePath": "$PSD_PHARMACEUTICAL_COMPOUNDS_ANALYSIS_STRUCTTABLEPATH$",
      "targTablePath": "$PSD_PHARMACEUTICAL_COMPOUNDS_ANALYSIS_TARGTABLEPATH$"
    }
  },

  "PlotBarChart": {
    "do": "analyze",
    "method": "Plot bar chart",
    "workflow": false,
    "wait": "$PLOT_BAR_CHART_WAIT$",
    "progress": "$PLOT_BAR_CHART_PROGRESS$",
    "parameters": {
      "inputTable": "$PLOT_BAR_CHART_INPUTTABLE$",
      "column": "$PLOT_BAR_CHART_COLUMN$",
      "labelsColumn": "$PLOT_BAR_CHART_LABELSCOLUMN$",
      "maxPieces": "$PLOT_BAR_CHART_MAXPIECES$",
      "addRemaininig": "$PLOT_BAR_CHART_ADDREMAININIG$",
      "paletteName": "$PLOT_BAR_CHART_PALETTENAME$",
      "autoFillLabels": "$PLOT_BAR_CHART_AUTOFILLLABELS$",
      "xAxisLabel": "$PLOT_BAR_CHART_XAXISLABEL$",
      "yAxisLabel": "$PLOT_BAR_CHART_YAXISLABEL$",
      "outputChart": "$PLOT_BAR_CHART_OUTPUTCHART$"
    }
  },

  "PlotPieChart": {
    "do": "analyze",
    "method": "Plot pie chart",
    "workflow": false,
    "wait": "$PLOT_PIE_CHART_WAIT$",
    "progress": "$PLOT_PIE_CHART_PROGRESS$",
    "parameters": {
      "inputTable": "$PLOT_PIE_CHART_INPUTTABLE$",
      "column": "$PLOT_PIE_CHART_COLUMN$",
      "labelsColumn": "$PLOT_PIE_CHART_LABELSCOLUMN$",
      "maxPieces": "$PLOT_PIE_CHART_MAXPIECES$",
      "addRemaininig": "$PLOT_PIE_CHART_ADDREMAININIG$",
      "paletteName": "$PLOT_PIE_CHART_PALETTENAME$",
      "outputChart": "$PLOT_PIE_CHART_OUTPUTCHART$"
    }
  },

  "ProcessTrackWithSites": {
    "do": "analyze",
    "method": "Process track with sites",
    "workflow": false,
    "wait": "$PROCESS_TRACK_WITH_SITES_WAIT$",
    "progress": "$PROCESS_TRACK_WITH_SITES_PROGRESS$",
    "parameters": {
      "sourcePath": "$PROCESS_TRACK_WITH_SITES_SOURCEPATH$",
      "sequences": "$PROCESS_TRACK_WITH_SITES_SEQUENCES$",
      "shrinkMode": "$PROCESS_TRACK_WITH_SITES_SHRINKMODE$",
      "enlargeStart": "$PROCESS_TRACK_WITH_SITES_ENLARGESTART$",
      "enlargeEnd": "$PROCESS_TRACK_WITH_SITES_ENLARGEEND$",
      "mergeOverlapping": "$PROCESS_TRACK_WITH_SITES_MERGEOVERLAPPING$",
      "removeSmallSites": "$PROCESS_TRACK_WITH_SITES_REMOVESMALLSITES$",
      "minimalSize": "$PROCESS_TRACK_WITH_SITES_MINIMALSIZE$",
      "destPath": "$PROCESS_TRACK_WITH_SITES_DESTPATH$"
    }
  },

  "ReduceTrack": {
    "do": "analyze",
    "method": "Reduce track",
    "workflow": false,
    "wait": "$REDUCE_TRACK_WAIT$",
    "progress": "$REDUCE_TRACK_PROGRESS$",
    "parameters": {
      "inputTrack": "$REDUCE_TRACK_INPUTTRACK$",
      "fieldNames": "$REDUCE_TRACK_FIELDNAMES$",
      "ignoreNaNInAggregator": "$REDUCE_TRACK_IGNORENANINAGGREGATOR$",
      "aggregator": "$REDUCE_TRACK_AGGREGATOR$",
      "outputTrack": "$REDUCE_TRACK_OUTPUTTRACK$"
    }
  },

  "RemoveOverlappingSites": {
    "do": "analyze",
    "method": "Remove overlapping sites",
    "workflow": false,
    "wait": "$REMOVE_OVERLAPPING_SITES_WAIT$",
    "progress": "$REMOVE_OVERLAPPING_SITES_PROGRESS$",
    "parameters": {
      "inputTrack": "$REMOVE_OVERLAPPING_SITES_INPUTTRACK$",
      "genome/dbSelector": "$REMOVE_OVERLAPPING_SITES_GENOMEDBSELECTOR$",
      "independentStrands": "$REMOVE_OVERLAPPING_SITES_INDEPENDENTSTRANDS$",
      "siteSelectMode": "$REMOVE_OVERLAPPING_SITES_SITESELECTMODE$",
      "outputTrack": "$REMOVE_OVERLAPPING_SITES_OUTPUTTRACK$"
    }
  },

  "SEEKSynchronize": {
    "do": "analyze",
    "method": "SEEK Synchronize",
    "workflow": false,
    "wait": "$SEEK_SYNCHRONIZE_WAIT$",
    "progress": "$SEEK_SYNCHRONIZE_PROGRESS$",
    "parameters": {
      "seekUrl": "$SEEK_SYNCHRONIZE_SEEKURL$",
      "login": "$SEEK_SYNCHRONIZE_LOGIN$",
      "password": "$SEEK_SYNCHRONIZE_PASSWORD$",
      "outputPath": "$SEEK_SYNCHRONIZE_OUTPUTPATH$",
      "availableDataFiles": "$SEEK_SYNCHRONIZE_AVAILABLEDATAFILES$"
    }
  },

  "SNPMatching": {
    "do": "analyze",
    "method": "SNP matching",
    "workflow": false,
    "wait": "$SNP_MATCHING_WAIT$",
    "progress": "$SNP_MATCHING_PROGRESS$",
    "parameters": {
      "sourcePath": "$SNP_MATCHING_SOURCEPATH$",
      "ensembl": "$SNP_MATCHING_ENSEMBL$",
      "fivePrimeSize": "$SNP_MATCHING_FIVEPRIMESIZE$",
      "threePrimeSize": "$SNP_MATCHING_THREEPRIMESIZE$",
      "outputNonMatched": "$SNP_MATCHING_OUTPUTNONMATCHED$",
      "column": "$SNP_MATCHING_COLUMN$",
      "ignoreNaNInAggregator": "$SNP_MATCHING_IGNORENANINAGGREGATOR$",
      "aggregator": "$SNP_MATCHING_AGGREGATOR$",
      "destPath": "$SNP_MATCHING_DESTPATH$",
      "annotatedPath": "$SNP_MATCHING_ANNOTATEDPATH$",
      "outputGenes": "$SNP_MATCHING_OUTPUTGENES$"
    }
  },

  "SelectRandomRows": {
    "do": "analyze",
    "method": "Select random rows",
    "workflow": false,
    "wait": "$SELECT_RANDOM_ROWS_WAIT$",
    "progress": "$SELECT_RANDOM_ROWS_PROGRESS$",
    "parameters": {
      "inputTable": "$SELECT_RANDOM_ROWS_INPUTTABLE$",
      "rndCount": "$SELECT_RANDOM_ROWS_RNDCOUNT$",
      "rndPercent": "$SELECT_RANDOM_ROWS_RNDPERCENT$",
      "rndTable": "$SELECT_RANDOM_ROWS_RNDTABLE$"
    }
  },

  "SelectTableColumns": {
    "do": "analyze",
    "method": "Select table columns",
    "workflow": false,
    "wait": "$SELECT_TABLE_COLUMNS_WAIT$",
    "progress": "$SELECT_TABLE_COLUMNS_PROGRESS$",
    "parameters": {
      "columnGroup/tablePath": "$SELECT_TABLE_COLUMNS_COLUMNGROUPTABLEPATH$",
      "columnGroup/columns": "$SELECT_TABLE_COLUMNS_COLUMNGROUPCOLUMNS$",
      "output": "$SELECT_TABLE_COLUMNS_OUTPUT$"
    }
  },

  "SelectTopRows": {
    "do": "analyze",
    "method": "Select top rows",
    "workflow": false,
    "wait": "$SELECT_TOP_ROWS_WAIT$",
    "progress": "$SELECT_TOP_ROWS_PROGRESS$",
    "parameters": {
      "inputTable": "$SELECT_TOP_ROWS_INPUTTABLE$",
      "column": "$SELECT_TOP_ROWS_COLUMN$",
      "types": "$SELECT_TOP_ROWS_TYPES$",
      "topPercent": "$SELECT_TOP_ROWS_TOPPERCENT$",
      "topCount": "$SELECT_TOP_ROWS_TOPCOUNT$",
      "topMinCount": "$SELECT_TOP_ROWS_TOPMINCOUNT$",
      "topTable": "$SELECT_TOP_ROWS_TOPTABLE$",
      "middlePercent": "$SELECT_TOP_ROWS_MIDDLEPERCENT$",
      "middleCount": "$SELECT_TOP_ROWS_MIDDLECOUNT$",
      "middleMinCount": "$SELECT_TOP_ROWS_MIDDLEMINCOUNT$",
      "middleTable": "$SELECT_TOP_ROWS_MIDDLETABLE$",
      "bottomPercent": "$SELECT_TOP_ROWS_BOTTOMPERCENT$",
      "bottomCount": "$SELECT_TOP_ROWS_BOTTOMCOUNT$",
      "bottomMinCount": "$SELECT_TOP_ROWS_BOTTOMMINCOUNT$",
      "bottomTable": "$SELECT_TOP_ROWS_BOTTOMTABLE$"
    }
  },

  "SuperAnnotateTable": {
    "do": "analyze",
    "method": "Super annotate table",
    "workflow": false,
    "wait": "$SUPER_ANNOTATE_TABLE_WAIT$",
    "progress": "$SUPER_ANNOTATE_TABLE_PROGRESS$",
    "parameters": {
      "inputTable": "$SUPER_ANNOTATE_TABLE_INPUTTABLE$",
      "idColumn": "$SUPER_ANNOTATE_TABLE_IDCOLUMN$",
      "annotationTables": "$SUPER_ANNOTATE_TABLE_ANNOTATIONTABLES$",
      "outputTable": "$SUPER_ANNOTATE_TABLE_OUTPUTTABLE$"
    }
  },

  "TrackToGeneSet": {
    "do": "analyze",
    "method": "Track to gene set",
    "workflow": false,
    "wait": "$TRACK_TO_GENE_SET_WAIT$",
    "progress": "$TRACK_TO_GENE_SET_PROGRESS$",
    "parameters": {
      "sourcePaths": "$TRACK_TO_GENE_SET_SOURCEPATHS$",
      "species": "$TRACK_TO_GENE_SET_SPECIES$",
      "from": "$TRACK_TO_GENE_SET_FROM$",
      "to": "$TRACK_TO_GENE_SET_TO$",
      "resultTypes": "$TRACK_TO_GENE_SET_RESULTTYPES$",
      "allGenes": "$TRACK_TO_GENE_SET_ALLGENES$",
      "destPath": "$TRACK_TO_GENE_SET_DESTPATH$"
    }
  },

  "TranscriptSetToTrack": {
    "do": "analyze",
    "method": "Transcript set to track",
    "workflow": false,
    "wait": "$TRANSCRIPT_SET_TO_TRACK_WAIT$",
    "progress": "$TRANSCRIPT_SET_TO_TRACK_PROGRESS$",
    "parameters": {
      "sourcePath": "$TRANSCRIPT_SET_TO_TRACK_SOURCEPATH$",
      "species": "$TRANSCRIPT_SET_TO_TRACK_SPECIES$",
      "from": "$TRANSCRIPT_SET_TO_TRACK_FROM$",
      "to": "$TRANSCRIPT_SET_TO_TRACK_TO$",
      "overlapMergingMode": "$TRANSCRIPT_SET_TO_TRACK_OVERLAPMERGINGMODE$",
      "destPath": "$TRANSCRIPT_SET_TO_TRACK_DESTPATH$"
    }
  },

  "TransformTable": {
    "do": "analyze",
    "method": "Transform table",
    "workflow": false,
    "wait": "$TRANSFORM_TABLE_WAIT$",
    "progress": "$TRANSFORM_TABLE_PROGRESS$",
    "parameters": {
      "columnGroup/tablePath": "$TRANSFORM_TABLE_COLUMNGROUPTABLEPATH$",
      "columnGroup/columns": "$TRANSFORM_TABLE_COLUMNGROUPCOLUMNS$",
      "operation": "$TRANSFORM_TABLE_OPERATION$",
      "outputTable": "$TRANSFORM_TABLE_OUTPUTTABLE$"
    }
  },

  "VennDiagrams": {
    "do": "analyze",
    "method": "Venn diagrams",
    "workflow": false,
    "wait": "$VENN_DIAGRAMS_WAIT$",
    "progress": "$VENN_DIAGRAMS_PROGRESS$",
    "parameters": {
      "table1Path": "$VENN_DIAGRAMS_TABLE1PATH$",
      "table1Name": "$VENN_DIAGRAMS_TABLE1NAME$",
      "circle1Color": "$VENN_DIAGRAMS_CIRCLE1COLOR$",
      "table2Path": "$VENN_DIAGRAMS_TABLE2PATH$",
      "table2Name": "$VENN_DIAGRAMS_TABLE2NAME$",
      "circle2Color": "$VENN_DIAGRAMS_CIRCLE2COLOR$",
      "table3Path": "$VENN_DIAGRAMS_TABLE3PATH$",
      "table3Name": "$VENN_DIAGRAMS_TABLE3NAME$",
      "circle3Color": "$VENN_DIAGRAMS_CIRCLE3COLOR$",
      "simple": "$VENN_DIAGRAMS_SIMPLE$",
      "output": "$VENN_DIAGRAMS_OUTPUT$"
    }

  }
}
